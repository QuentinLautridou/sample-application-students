language: java
jdk: oraclejdk8

env:
  global:
    - secure: OxWfcJjIp48+JBJbNn+xV0VkszfaEEecdVSTXQk9g/e/dHinrAwv8lrH1MWxqdMfPefiJWnXH/YTfrTSTqslk8SawEs7WU8sqiY8mIDVlHVU9JOlGxNleLzQTjHsW0r6dBNaHZhNv8xzhQuuzHHQ243uiTYxgSN96mGboho10eczcmEgx1tHT6yZ/oWJjKK9jnlBXvkVDYZG7thyVEnBHKkag+XzSxmcPiuVQ/xCfiDksnfCjnCdnk5YBG4K5ySmoFurdeTA1kvbqeEUS0mVUssi6A3XtH9Tu+cPHOx9VUuhI8j3JBBVR5fwSveX/bnST0qZpqAliZGsKjVK+WcHA4sNyF+6m1wf0Z61DF2ZQl7Aen4opTsvcKaZ4d0luQ3PSUsqfev3yq1WUERy04wk5VqMK3/xsENwqf5+i6Xv70i1X2chuY8mnpugobzL4aykI5dG7oLubgzUWvdJqBMZzJiPED7/VWr7gU4m9vIfZ3AntzGn+uebYV6czcMZbt8YfbNjy2/gCNDLNCEhoAp3SaXRMxISHeCU2pK9BcpaHNf+2Jpu2rGQa/+r/86ApTVcKAbuVpDSo6e1SHQ123jGKd50vEEazoXZVglaYrP9xkM+6ZThkNsgwBE4IjKiG2fnwzIahXbpoWhEJs1wDRr1nXjKGmJwvCeaAuRLxftnoAA=
    - secure: C6uzdZUAA4DUcNbbdySRsoUDRFnFznOUg59nzuoUo2cBmF1EaJNrg7KviYlUMiacWjtA78Z+pZslr5VgXX1dUoROUtUvjCjx/vHSGLUoL5KTOZSAbooR8O2T91uwd6JEGcqkG2oovg/lrHbkedmGoKrhPrFq2a2C7ROi5jhD5rpyPz1PYQc5R3dFsgg+yKGkIe6f3mbWwZeX0i2KAFw4cgCQ5Pnl7V9EHsvsIumEXYrcvA4H0Zvr5+9cCW41GMAKn/G/pC6Bw0xXLw7jmRq4hEldgOBmuGQ4XZh/W+Vv7tSL54w6H8nT09d9dk25z/pU2Uv8rnuXDCVuHaWsMhFM42AlcEPSjZlBC2P70HW+nI0rn3gsIERmsnRz6fo7X+HaPoleXNpGj50gJl/mTC9vf7gXu3dzExCyndpUlRRVppS7ZJBg7BOVSOR1T90oajRxuqQ0Um06Tnj3CSZrFO/KuZjtHUj9kFSRRBkws999yPzDH9gHYbOvhkypCnE0wAVw4d+iHbL2Lq6LfWjEcu5/RVJgJplcDlQlLu6pC3rkI/EtrKGoqfk9eZ8H8OgovHAFmCHqvVjCvTUpzUKR1vuJKA4BPVTkLm2hsSnHjI470iMKnEoN790aGKKb/4GuHme6KGnOfG8UwVgX4QfoujNAdYwDnhP47X+5MuTor1XOpAM=
    - secure: GMtq2WJLQy0Z2AyqUe48Cw3cRas5reSwjr1X02d0cTfU0dt724JYHtMCm653IuzK/XLGHcSAQz27sq8NEZzh6BdPtr9vEk3L8x8sMYoQwAU6EqL8837KCQjNj4imALUUMX+W4fQ64TcgtTlBT8D/B3oeLNzcC5HrXrL3q5fKNpjiN1MhZCS9/zw+mMan3utXSaYNG7ZExtg5FjBvb7OENiVD57BYB1X4Sl9zjzPjdZJeXwNTwxbDEbJzv9AE/llmgKXsRkeFCDcwo1WkT+cS/8pRogYKoEHWRUu5D9B+U2RxeO5WnHXcyt98yWxFklkFMFVajjmCf19C72a0ZKRPON6RSoYUmnnUBZ6XrMQsnZjv43sMj7asUPKtcOICh9mDPj4Xb/dwdI9u/Bc7/UiqOp0SaFeBF6QD3Cn2Rgz15hB7rxlIxqOwoYwsLQtQiyAyi6rpuDAu+KPWFjtcyQ8CAeh0JMjI679lmKRWfWBkrLDFc8eN171SK6TuLsCrPia/ILtkr3jmI5KBSWRUc+aIS1ouU3ukBceGm7yyDOXXsB2xj3xP5rDlOgdDjbb+BzWKXbdcznTfuylJPMshR9T0dOw71FtPnGqFBXZYAz6EoeiOBioHKaUY3XkGXH27Avr5kN6O0nW9uPZeX22xVgK2bQW45IOO0WuhXH+b/3mOaIY=
services:
  - docker

before_install:
  - sudo service mysql stop
  - docker pull takimatraining/devops-training-db
  - docker run -d -p 127.0.0.1:3306:3306 takimatraining/devops-training-db

script:
  - |
    mvn clean install sonar:sonar \
    -Dsonar.projectKey=QuentinLautridou_sample-application-students \
    -Dsonar.organization=quentinlautridou-github \
    -Dsonar.host.url=https://sonarcloud.io \
    -Dsonar.login=$SONAR_TOKEN
  # Login to Docker hub
  - docker login -u $DOCKER_USER -p $DOCKER_PASS
  # Tag text according to the branch
  - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH; fi`
  # Image name
  - export IMAGE_NAME=takimatraining/sample-application
  # Build the image (see Dockerfile) and tag it with the commit ID
  - docker build -t $IMAGE_NAME:$TRAVIS_COMMIT .
  # Retag the image with the previously choosen tag
  - docker tag $IMAGE_NAME:$TRAVIS_COMMIT $IMAGE_NAME:$TAG
  # Push the tagged image to Docker Hub
  - docker push $IMAGE_NAME:$TAG
